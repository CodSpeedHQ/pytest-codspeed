[project.urls]
Homepage = "https://codspeed.io/"
Documentation = "https://docs.codspeed.io/"
Source = "https://github.com/CodSpeedHQ/pytest-codspeed"

[project]
name = "pytest-codspeed"
dynamic = ["version"]
description = "Pytest plugin to create CodSpeed benchmarks"
readme = "README.md"
license = { file = "LICENSE" }
requires-python = ">=3.9"
authors = [{ name = "Arthur Pastel", email = "arthur@codspeed.io" }]
keywords = ["codspeed", "benchmark", "performance", "pytest"]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Framework :: Pytest",
    "Intended Audience :: Developers",
    "Intended Audience :: Information Technology",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Software Development :: Testing",
    "Topic :: System :: Benchmark",
    "Topic :: Utilities",
    "Typing :: Typed",
]
dependencies = [
    "cffi >= 1.17.1",
    "pytest>=3.8",
    "rich>=13.8.1",
    "importlib-metadata>=8.5.0; python_version < '3.10'",
]

[project.optional-dependencies]
lint = ["mypy ~= 1.11.2", "ruff ~= 0.6.5"]
compat = [
    "pytest-benchmark ~= 5.0.0",
    "pytest-xdist ~= 3.6.1",
    # "pytest-speed>=0.3.5",
]
test = ["inline-snapshot>=0.18.2", "pytest ~= 7.0", "pytest-cov ~= 4.0.0"]

[tool.uv.sources]
pytest-codspeed = { workspace = true }

[dependency-groups]
dev = ["pytest-codspeed"]

[project.entry-points]
pytest11 = { codspeed = "pytest_codspeed.plugin" }

[build-system]
requires = ["setuptools >= 61", "cffi >= 1.17.1"]
build-backend = "setuptools.build_meta"

[tool.setuptools]
license-files = [] # Workaround of https://github.com/astral-sh/uv/issues/9513

[tool.setuptools.dynamic]
version = { attr = "pytest_codspeed.__version__" }


[tool.bumpver]
current_version = "3.1.2"
version_pattern = "MAJOR.MINOR.PATCH[-TAG[NUM]]"
commit_message = "Release v{new_version} ðŸš€"
tag_message = "Release v{new_version} ðŸš€"
tag_scope = "default"
allow_dirty = false
pre_commit_hook = "./scripts/pre-release.sh"
post_commit_hook = "./scripts/post-release.sh"
commit = true
tag = false
push = false


[tool.bumpver.file_patterns]
"pyproject.toml" = ['current_version = "{version}"']
"src/pytest_codspeed/__init__.py" = [
    '__version__ = "{pep440_version}"',
    '__semver_version__ = "{version}"',
]

[tool.cibuildwheel]
build = "cp*manylinux*"
test-extras = ["build", "test", "compat"]
test-command = "pytest -v --ignore={project}/tests/benchmarks {project}/tests"

[tool.cibuildwheel.linux]
environment = { PYTEST_CODSPEED_FORCE_EXTENSION_BUILD = "1", PYTEST_CODSPEED_FORCE_VALGRIND_TESTS = "1" }
manylinux-x86_64-image = "manylinux_2_28"
manylinux-aarch64-image = "manylinux_2_28"
before-all = "yum -y install valgrind-devel"

[tool.mypy]
python_version = "3.12"

[tool.ruff]
target-version = "py37"

[tool.ruff.lint]
select = ["E", "F", "I", "C", "TCH", "FA", "UP"]
flake8-type-checking = { exempt-modules = [], strict = true }

[tool.isort]
line_length = 88
multi_line_output = 3
include_trailing_comma = true
use_parentheses = true
force_grid_wrap = 0
float_to_top = true

[tool.pytest.ini_options]
addopts = "--ignore=tests/benchmarks --ignore=tests/examples --ignore=tests/benchmarks/TheAlgorithms"
filterwarnings = ["ignore::DeprecationWarning:pytest_benchmark.utils.*:"]
pythonpath = ["tests/benchmarks/TheAlgorithms", "./scripts"]

[tool.coverage.run]
branch = true
[tool.coverage.report]
include = ["src/*", "tests/*"]
omit = ["**/conftest.py"]
exclude_lines = [
    "pragma: no cover",
    "if TYPE_CHECKING:",
    "@pytest.mark.skip",
    "@abstractmethod",
]
