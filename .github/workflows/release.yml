name: Release on tag

on:
  push:
    tags:
      - "v*"
  workflow_dispatch:

permissions:
  id-token: write
  contents: write

jobs:
  build-wheels:
    strategy:
      matrix:
        platform:
          - runs-on: ubuntu-24.04
            arch: x86_64
          - runs-on: buildjet-8vcpu-ubuntu-2204-arm
            arch: aarch64

    runs-on: ${{ matrix.platform.runs-on }}
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true
      - name: Build wheels
        uses: pypa/cibuildwheel@v2.22.0
        env:
          CIBW_ARCHS: ${{ matrix.platform.arch }}
        with:
          output-dir: wheelhouse

      - uses: actions/upload-artifact@v4
        with:
          name: wheels-${{ matrix.platform.arch }}
          path: wheelhouse/*.whl

  build-py3-none-any:
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true
      - uses: astral-sh/setup-uv@v4
        with:
          version: "0.5.20"
      - uses: actions/setup-python@v2
        with:
          python-version: "3.12"
      - name: Build py3-none-any wheel
        env:
          PYTEST_CODSPEED_SKIP_EXTENSION_BUILD: "1"
        run: uv build --wheel --out-dir dist/

      - uses: actions/upload-artifact@v4
        with:
          name: wheels-py3-none-any
          path: dist/*.whl

  build-sdist:
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true
      - uses: astral-sh/setup-uv@v4
        with:
          version: "0.5.20"
      - uses: actions/setup-python@v2
        with:
          python-version: "3.12"
      - name: Build the source dist
        run: uv build --sdist --out-dir dist/

      - uses: actions/upload-artifact@v4
        with:
          name: sdist
          path: dist/*.tar.gz

  publish:
    needs:
      - build-wheels
      - build-py3-none-any
      - build-sdist

    runs-on: ubuntu-24.04
    steps:
      - uses: actions/download-artifact@v4
        with:
          merge-multiple: true
          path: dist/
      - uses: actions/checkout@v4
      - uses: astral-sh/setup-uv@v4
        with:
          version: "0.5.20"
      - uses: actions/setup-python@v2
        with:
          python-version: "3.12"

      - uses: actions/download-artifact@v4
        with:
          merge-multiple: true
          path: dist/

      - name: List artifacts
        run: ls -al dist/*

      - if: github.event_name == 'push'
        name: Publish to PyPI
        run: uv publish --trusted-publishing=always dist/*

      - if: github.event_name == 'push'
        name: Create a draft release
        run: |
          VERSION="${{ github.ref_name }}"
          gh release create $VERSION --title $VERSION --generate-notes -d
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
